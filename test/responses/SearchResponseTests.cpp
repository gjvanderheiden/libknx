#include <gtest/gtest.h>
#include "KnxIpHeader.h"
#include "SearchResponse.h"
#include <array>

static std::array<byte, 102> test_frame = {
    0x06, 0x10, 0x02, 0x02, 0x00, 0x4e, 0x08, 0x01, 0xc0, 0xa8, 0x0a, 0x0f,
    0x0e, 0x57, 0x36, 0x01, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x17, 0x0c, 0xac, 0x87, 0xa3, 0x16,
    0x2d, 0x13, 0x63, 0x61, 0x6c, 0x69, 0x6d, 0x65, 0x72, 0x6f, 0x2d, 0x63,
    0x6f, 0x72, 0x65, 0x20, 0x6b, 0x6e, 0x78, 0x20, 0x74, 0x65, 0x73, 0x74,
    0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x00, 0x0a, 0x02, 0x02, 0x02,
    0x03, 0x02, 0x04, 0x02, 0x05, 0x02};

using namespace knx::requestresponse;


TEST(SearchResponse, parse) {
  ByteBufferReader reader{test_frame};
  KnxIpHeader header = KnxIpHeader::parse(reader);
  SearchResponse searchReaponse = SearchResponse::parse(reader);
  ASSERT_EQ("192.168.10.15", searchReaponse.getControlEndPoint().getAddress().asString());
}  
